type Ability {
  canCreateProjectPromotions: Boolean!
  canUpdateTagCategories: Boolean!
  canUpdateTags: Boolean!
}

"""
Autogenerated input type of AcceptBrandMembershipInvitation
"""
input AcceptBrandMembershipInvitationInput {
  brandId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  invitationToken: String!
}

"""
Autogenerated return type of AcceptBrandMembershipInvitation
"""
type AcceptBrandMembershipInvitationPayload {
  brandMembership: BrandMembership!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of ApproveBrand
"""
input ApproveBrandInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ApproveBrand
"""
type ApproveBrandPayload {
  brand: Brand!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Brand {
  approved: Boolean
  brandMemberships: [BrandMembership!]!
  createdAt: ISO8601DateTime!
  creator: User
  currentUserCanCreateProjects: Boolean!
  currentUserCanEdit: Boolean!
  currentUserCanManageMemberships: Boolean!
  description: String
  id: ID!
  name: String!
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProjectConnection!
  slug: String!
  updatedAt: ISO8601DateTime!
  users: [User!]!
}

input BrandAttributes {
  description: String
  name: String
}

"""
The connection type for Brand.
"""
type BrandConnection {
  """
  A list of edges.
  """
  edges: [BrandEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type BrandEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Brand!
}

type BrandMembership {
  admin: Boolean!
  brand: Brand!
  createdAt: ISO8601DateTime!
  id: ID!
  invitationEmail: String
  updatedAt: ISO8601DateTime!
  user: User
}

"""
Autogenerated input type of CompleteProjectFileUpload
"""
input CompleteProjectFileUploadInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  filename: String!
  filepath: String!
  filesize: Int!
  filetype: String
  projectId: ID!
  url: String!
}

"""
Autogenerated return type of CompleteProjectFileUpload
"""
type CompleteProjectFileUploadPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectFile: ProjectFile!
}

"""
Autogenerated input type of CreateBrand
"""
input CreateBrandInput {
  brandAttributes: BrandAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBrand
"""
type CreateBrandPayload {
  brand: Brand!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreateProject
"""
input CreateProjectInput {
  brandId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectAttributes: ProjectAttributes!
}

"""
Autogenerated input type of CreateProjectLink
"""
input CreateProjectLinkInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectId: ID!
  projectLinkAttributes: ProjectLinkAttributes!
}

"""
Autogenerated return type of CreateProjectLink
"""
type CreateProjectLinkPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectLink: ProjectLink!
}

"""
Autogenerated return type of CreateProject
"""
type CreateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  project: Project!
}

"""
Autogenerated input type of CreateTagCategory
"""
input CreateTagCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tagCategoryAttributes: TagCategoryAttributes!
}

"""
Autogenerated return type of CreateTagCategory
"""
type CreateTagCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tagCategory: TagCategory!
}

"""
Autogenerated input type of CreateTag
"""
input CreateTagInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tagAttributes: TagAttributes!
}

"""
Autogenerated return type of CreateTag
"""
type CreateTagPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tag: Tag!
}

"""
Autogenerated input type of DeleteBrandMembership
"""
input DeleteBrandMembershipInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteBrandMembership
"""
type DeleteBrandMembershipPayload {
  brandMembership: BrandMembership!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DeleteProjectFile
"""
input DeleteProjectFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProjectFile
"""
type DeleteProjectFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectFile: ProjectFile!
}

"""
Autogenerated input type of DeleteProject
"""
input DeleteProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of DeleteProjectLink
"""
input DeleteProjectLinkInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProjectLink
"""
type DeleteProjectLinkPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectLink: ProjectLink!
}

"""
Autogenerated return type of DeleteProject
"""
type DeleteProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  project: Project!
}

"""
Autogenerated input type of DeleteTagCategory
"""
input DeleteTagCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteTagCategory
"""
type DeleteTagCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tagCategory: TagCategory!
}

"""
Autogenerated input type of DeleteTag
"""
input DeleteTagInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteTag
"""
type DeleteTagPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tag: Tag!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Autogenerated input type of InviteBrandMember
"""
input InviteBrandMemberInput {
  admin: Boolean!
  brandId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
}

"""
Autogenerated return type of InviteBrandMember
"""
type InviteBrandMemberPayload {
  brandMembership: BrandMembership!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type License {
  dedicationHtml: String
  discouraged: Boolean!
  discouragedReason: String
  id: ID!
  logoUrl: String
  name: String!
  url: String!
}

"""
Autogenerated input type of MoveProjectFile
"""
input MoveProjectFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  destinationIndex: Int!
  id: ID!
}

"""
Autogenerated return type of MoveProjectFile
"""
type MoveProjectFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  project: Project!
  projectFile: ProjectFile!
}

"""
Autogenerated input type of MoveProjectLink
"""
input MoveProjectLinkInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  destinationIndex: Int!
  id: ID!
}

"""
Autogenerated return type of MoveProjectLink
"""
type MoveProjectLinkPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  project: Project!
  projectLink: ProjectLink!
}

type Mutation {
  acceptBrandMembershipInvitation(
    """
    Parameters for AcceptBrandMembershipInvitation
    """
    input: AcceptBrandMembershipInvitationInput!
  ): AcceptBrandMembershipInvitationPayload
  approveBrand(
    """
    Parameters for ApproveBrand
    """
    input: ApproveBrandInput!
  ): ApproveBrandPayload
  completeProjectFileUpload(
    """
    Parameters for CompleteProjectFileUpload
    """
    input: CompleteProjectFileUploadInput!
  ): CompleteProjectFileUploadPayload
  createBrand(
    """
    Parameters for CreateBrand
    """
    input: CreateBrandInput!
  ): CreateBrandPayload
  createProject(
    """
    Parameters for CreateProject
    """
    input: CreateProjectInput!
  ): CreateProjectPayload
  createProjectLink(
    """
    Parameters for CreateProjectLink
    """
    input: CreateProjectLinkInput!
  ): CreateProjectLinkPayload
  createTag(
    """
    Parameters for CreateTag
    """
    input: CreateTagInput!
  ): CreateTagPayload
  createTagCategory(
    """
    Parameters for CreateTagCategory
    """
    input: CreateTagCategoryInput!
  ): CreateTagCategoryPayload
  deleteBrandMembership(
    """
    Parameters for DeleteBrandMembership
    """
    input: DeleteBrandMembershipInput!
  ): DeleteBrandMembershipPayload
  deleteProject(
    """
    Parameters for DeleteProject
    """
    input: DeleteProjectInput!
  ): DeleteProjectPayload
  deleteProjectFile(
    """
    Parameters for DeleteProjectFile
    """
    input: DeleteProjectFileInput!
  ): DeleteProjectFilePayload
  deleteProjectLink(
    """
    Parameters for DeleteProjectLink
    """
    input: DeleteProjectLinkInput!
  ): DeleteProjectLinkPayload
  deleteTag(
    """
    Parameters for DeleteTag
    """
    input: DeleteTagInput!
  ): DeleteTagPayload
  deleteTagCategory(
    """
    Parameters for DeleteTagCategory
    """
    input: DeleteTagCategoryInput!
  ): DeleteTagCategoryPayload
  inviteBrandMember(
    """
    Parameters for InviteBrandMember
    """
    input: InviteBrandMemberInput!
  ): InviteBrandMemberPayload
  moveProjectFile(
    """
    Parameters for MoveProjectFile
    """
    input: MoveProjectFileInput!
  ): MoveProjectFilePayload
  moveProjectLink(
    """
    Parameters for MoveProjectLink
    """
    input: MoveProjectLinkInput!
  ): MoveProjectLinkPayload
  promoteProject(
    """
    Parameters for PromoteProject
    """
    input: PromoteProjectInput!
  ): PromoteProjectPayload
  unpromoteProject(
    """
    Parameters for UnpromoteProject
    """
    input: UnpromoteProjectInput!
  ): UnpromoteProjectPayload
  updateBrand(
    """
    Parameters for UpdateBrand
    """
    input: UpdateBrandInput!
  ): UpdateBrandPayload
  updateProject(
    """
    Parameters for UpdateProject
    """
    input: UpdateProjectInput!
  ): UpdateProjectPayload
  updateProjectLink(
    """
    Parameters for UpdateProjectLink
    """
    input: UpdateProjectLinkInput!
  ): UpdateProjectLinkPayload
  updateTag(
    """
    Parameters for UpdateTag
    """
    input: UpdateTagInput!
  ): UpdateTagPayload
  updateTagCategory(
    """
    Parameters for UpdateTagCategory
    """
    input: UpdateTagCategoryInput!
  ): UpdateTagCategoryPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Project {
  authors: String
  brand: Brand!
  createdAt: ISO8601DateTime!
  currentUserCanDelete: Boolean!
  currentUserCanDeleteFiles: Boolean!
  currentUserCanEdit: Boolean!
  currentUserCanUploadFiles: Boolean!
  description: String
  id: ID!
  lengthQuantity: Int
  lengthUnits: String
  license: License
  maxFacilitators: Int
  maxPlayers: Int
  minFacilitators: Int
  minPlayers: Int
  projectFiles: [ProjectFile!]!
  projectLinks: [ProjectLink!]!
  publicationYear: Int
  tags: [Tag!]!
  title: String
  updatedAt: ISO8601DateTime!
}

input ProjectAttributes {
  authors: String
  description: String
  lengthQuantity: Int
  lengthUnits: String
  licenseId: ID
  maxFacilitators: Int
  maxPlayers: Int
  minFacilitators: Int
  minPlayers: Int
  publicationYear: Int
  tagNames: [String!]
  title: String
}

"""
The connection type for Project.
"""
type ProjectConnection {
  """
  A list of edges.
  """
  edges: [ProjectEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type ProjectEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Project!
}

type ProjectFile {
  createdAt: ISO8601DateTime!
  filename: String!
  filepath: String!
  filesize: Int!
  filetype: String
  id: ID!
  position: Int!
  project: Project!
  updatedAt: ISO8601DateTime!
  uploaderId: Int
  url: String!
}

type ProjectLink {
  icon: String
  id: ID!
  position: Int!
  project: Project!
  title: String!
  url: String!
}

input ProjectLinkAttributes {
  icon: String
  title: String
  url: String
}

type ProjectPromotion {
  createdAt: ISO8601DateTime!
  id: ID!
  project: Project!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of PromoteProject
"""
input PromoteProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectId: ID!
}

"""
Autogenerated return type of PromoteProject
"""
type PromoteProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectPromotion: ProjectPromotion!
}

type Query {
  brand(id: ID, slug: String): Brand!
  brandMembership(brandId: ID, brandSlug: String, invitationToken: String!): BrandMembership!
  brands(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    unapproved: Boolean
  ): BrandConnection!
  currentAbility: Ability!
  currentUser: User
  licenses: [License!]!
  project(id: ID!): Project!
  projectPromotions: [ProjectPromotion!]!
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
    authors: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    brandId: Int
    facilitatorCountLowerBound: Int
    facilitatorCountUpperBound: Int

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    playerCountLowerBound: Int
    playerCountUpperBound: Int
    queryString: String
    tag: String
    title: String
  ): ProjectConnection!
  tag(id: ID!): Tag!
  tagByName(name: String): Tag
  tagCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    queryString: String
  ): TagCategoryConnection!
  tagCategory(id: ID!): TagCategory!
  tags(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    queryString: String
  ): TagConnection!
}

type Tag {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProjectConnection!
  tagCategory: TagCategory
  updatedAt: ISO8601DateTime!
}

input TagAttributes {
  name: String
  tagCategoryId: ID
}

type TagCategory {
  color: String
  createdAt: ISO8601DateTime!
  icon: String
  id: ID!
  name: String!
  tags: [Tag!]!
  textColor: String
  updatedAt: ISO8601DateTime!
}

input TagCategoryAttributes {
  color: String
  icon: String
  name: String
}

"""
The connection type for TagCategory.
"""
type TagCategoryConnection {
  """
  A list of edges.
  """
  edges: [TagCategoryEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type TagCategoryEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: TagCategory!
}

"""
The connection type for Tag.
"""
type TagConnection {
  """
  A list of edges.
  """
  edges: [TagEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type TagEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Tag!
}

"""
Autogenerated input type of UnpromoteProject
"""
input UnpromoteProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectId: ID!
}

"""
Autogenerated return type of UnpromoteProject
"""
type UnpromoteProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectPromotion: ProjectPromotion!
}

"""
Autogenerated input type of UpdateBrand
"""
input UpdateBrandInput {
  brandAttributes: BrandAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of UpdateBrand
"""
type UpdateBrandPayload {
  brand: Brand!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of UpdateProject
"""
input UpdateProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  projectAttributes: ProjectAttributes!
}

"""
Autogenerated input type of UpdateProjectLink
"""
input UpdateProjectLinkInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  projectLinkAttributes: ProjectLinkAttributes!
}

"""
Autogenerated return type of UpdateProjectLink
"""
type UpdateProjectLinkPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectLink: ProjectLink!
}

"""
Autogenerated return type of UpdateProject
"""
type UpdateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  project: Project!
}

"""
Autogenerated input type of UpdateTagCategory
"""
input UpdateTagCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  tagCategoryAttributes: TagCategoryAttributes!
}

"""
Autogenerated return type of UpdateTagCategory
"""
type UpdateTagCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tagCategory: TagCategory!
}

"""
Autogenerated input type of UpdateTag
"""
input UpdateTagInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  tagAttributes: TagAttributes!
}

"""
Autogenerated return type of UpdateTag
"""
type UpdateTagPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tag: Tag!
}

type User {
  admin: Boolean
  brandMemberships: [BrandMembership!]!
  brands: [Brand!]!
  email: String
  firstname: String
  id: ID!
  lastname: String
  name: String!
  username: String!
}
