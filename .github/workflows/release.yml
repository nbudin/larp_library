name: Release

on:
  release:
    types: [published]

jobs:
  docker-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DockerHubUsername }}
        password: ${{ secrets.DockerHubPassword }}
    - name: Pull built image
      run: docker pull ghcr.io/neinteractiveliterature/larp_library:${{ github.sha }}
    - name: Tag image with version Tag
      run: docker tag ghcr.io/neinteractiveliterature/larp_library:${{ github.sha }} neinteractiveliterature/larp_library:${{ github.event.release.name }}
    - name: Tag image as latest
      run: docker tag ghcr.io/neinteractiveliterature/larp_library:${{ github.sha }} neinteractiveliterature/larp_library:latest
    - name: Push to Docker Hub
      run: docker push neinteractiveliterature/larp_library:latest && docker push neinteractiveliterature/larp_library:${{ github.event.release.name }}
  render-release:
    runs-on: ubuntu-latest
    needs:
      - docker-release
    steps:
    - name: Release app to Render
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.LARP_LIBRARY_RENDER_ACCESS_TOKEN }}
        repository: neinteractiveliterature/larp_library-render
        event-type: larp-library-release
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "tag": "${{ github.event.release.name }}"}'
  heroku-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Pull built image
      run: docker pull ghcr.io/neinteractiveliterature/larp_library:${{ github.sha }}
    - name: Log into Heroku Container Registry
      env:
        HEROKU_API_KEY: ${{ secrets.HerokuApiToken }}
      run: heroku container:login
    - name: Tag production image as "web"
      run: docker tag ghcr.io/neinteractiveliterature/larp_library:${{ github.sha }} registry.heroku.com/larp-library/web
    - name: Push "web" image to Heroku Container Registry
      run: docker push registry.heroku.com/larp-library/web
    - name: Release app to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HerokuApiToken }}
      run: heroku container:release -a ${{ secrets.HerokuAppName }} web
  notify-slack:
    runs-on: ubuntu-latest
    needs:
      - heroku-release
      - render-release
    steps:
    - name: Format release notes for Slack
      id: format-release-notes
      uses: LoveToKnow/slackify-markdown-action@v1.0.0
      with:
        text: ${{ github.event.release.body }}
    - name: Post about release to Slack
      id: slack
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: ${{ secrets.SlackReleaseNotificationChannelID }}
        payload: |
          {
            "text": "Larp Library ${{ github.event.release.name }} released to production",
            "unfurl_links": false,
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Larp Library ${{ github.event.release.name }} released to production"
                }
              },
              { "type": "divider" },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ${{ toJSON(steps.format-release-notes.outputs.text) }}
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SlackToken }}
